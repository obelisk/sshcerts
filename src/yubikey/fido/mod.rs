/// For managing keys stored on the device 
pub mod management;

/// Errors when interacting with the Yubikey FIDO application.
#[derive(Debug)]
pub enum Error {
    /// Occurs when the attestation generated by the device does not
    /// validate.
    VerificationError,
    /// Occurs when a credential fails to be created on the FIDO device
    MakeCredentialError(String),
}

impl std::fmt::Display for Error {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match *self {
            Error::VerificationError => write!(f, "Generated attestation did not validate for new key"),
            Error::MakeCredentialError(ref err) => write!(f, "Could not create credential: {}", err),
        }
    }
}

#[derive(Debug)]
/// Represents a FIDO2 device that can used with the CTAP2 protocol
pub struct Device {}

impl Device {
    /// Create a new FIDO2 device for generating keys and signing
    /// requests.
    pub fn new() -> Self {
        Self {}
    }
}